{"version":3,"file":"b32.js","sourceRoot":"","sources":["../src/b32.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @enum b32c {number}\n * maps code points to numbers\n */\nconst b32c: ReadonlyArray<number> = Object.freeze([\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, 26, 27, 28, 29, 30, 31,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1,  0,  1,  2,  3,  4,  5,  6,\n\t7,   8,  9, 10, 11, 12, 13, 14,\n\t15, 16, 17, 18, 19, 20, 21, 22,\n\t23, 24, 25, -1, -1, -1, -1, -1,\n\t-1,  0,  1,  2,  3,  4,  5,  6,\n\t7,   8,  9, 10, 11, 12, 13, 14,\n\t15, 16, 17, 18, 19, 20, 21, 22,\n\t23, 24, 25, -1, -1, -1, -1, -1\n])\n\n// buffered for      0  1    2  3  4    5  6    7\nconst xb:ReadonlyArray<number> = Object.freeze([0, 4, NaN, 3, 2, NaN, 1, NaN])\n\nconst v = new Uint8Array(8)\nconst _v = new Uint32Array(v.buffer, v.byteOffset, 2)\n\ninterface call_b32_buf {\n\t(b32: ArrayBufferView): Uint8Array;\n\t(b32: string): Uint8Array;\n\t(b32: string, overwrite: false): Uint8Array;\n}\nconst getB32S = (s: string, n: number) => s.codePointAt(n) || 0\nconst getB32B = (b: Uint8Array, n: number) => b[n] || 0\nconst {floor, ceil} = Math\nconst b32_buf: call_b32_buf = (\n\tb32: ArrayBufferView | string,\n\toverwrite = false\n): Uint8Array => {\n\tif (overwrite && 'object' !== typeof b32 && !ArrayBuffer.isView(b32))\n\t\tthrow new TypeError(`b32_buf option 'overwrite' cannot be used when b32 is not an ArrayBufferView`)\n\n\tconst B32: Uint8Array | string = (\n\t\t\t'string' === typeof b32\n\t\t\t? b32\n\t\t\t: new Uint8Array(b32.buffer, b32.byteOffset, b32.byteLength)\n\t\t),\n\t\tlen = (\n\t\t\tArrayBuffer.isView(B32)\n\t\t\t? B32.lastIndexOf(0x3D, B32.length - 1) > -1\n\t\t\t: B32.lastIndexOf('=', B32.length - 1) > -1\n\t\t) ? ArrayBuffer.isView(B32)\n\t\t\t? B32.indexOf(0x3D, 0)\n\t\t\t: B32.indexOf('=', 0)\n\t\t: B32.length,\n\t\tcnt = len & -8,\n\t\trem = len - cnt,\n\t\tbLen = 5 * (len >>> 3) + xb[B32.length - len],\n\t\tbuf = (\n\t\t\toverwrite && 'string' !== typeof b32\n\t\t\t? new Uint8Array(b32.buffer, b32.byteOffset, bLen)\n\t\t\t: new Uint8Array(bLen)\n\t\t),\n\t\tgetB32: ((n: number) => number) = ('string' === typeof B32 ? getB32S : getB32B).bind(null, B32)\n\n\tlet i = 0, idx = 0\n\n\t// 8 chars = 5 bytes\n\twhile (i < cnt) {\n\t\tv[0] = b32c[getB32(i++)]\n\t\tv[1] = b32c[getB32(i++)]\n\t\tv[2] = b32c[getB32(i++)]\n\t\tv[3] = b32c[getB32(i++)]\n\t\tv[4] = b32c[getB32(i++)]\n\t\tv[5] = b32c[getB32(i++)]\n\t\tv[6] = b32c[getB32(i++)]\n\t\tv[7] = b32c[getB32(i++)]\n\n\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\tbuf[idx++] = (v[3] << 4 | v[4] >>> 1) & 255\n\t\tbuf[idx++] = (v[4] << 7 | v[5] << 2 | v[6] >>> 3) & 255\n\t\tbuf[idx++] = (v[6] << 5 | v[7]) & 255\n\t}\n\n\tswitch (rem) {\n\t\tcase 2:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i)]\n\n\t\t\tbuf[idx] = (v[0] << 3 | v[1] >>> 2) & 255\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\t\tbuf[idx] = (v[3] << 4 | v[4] >>> 1) & 255\n\n\t\t\tbreak\n\t\tcase 7:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i++)]\n\t\t\tv[5] = b32c[getB32(i++)]\n\t\t\tv[6] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\t\tbuf[idx++] = (v[3] << 4 | v[4] >>> 1) & 255\n\t\t\tbuf[idx] = (v[4] << 7 | v[5] << 2 | v[6] >>> 3) & 255\n\n\t\t\tbreak\n\t}\n\ttry {\n\t\treturn buf\n\t} finally {\n\t\t_v[0] = 0\n\t\t_v[1] = 0\n\t}\n}\n\n// A..Z; 2..7\nconst b256: ReadonlyArray<number> = Object.freeze([\n\t65, 66, 67, 68, 69, 70, 71, 72,\n\t73, 74, 75, 76, 77, 78, 79, 80,\n\t81, 82, 83, 84, 85, 86, 87, 88,\n\t89, 90, 50, 51, 52, 53, 54, 55\n])\ninterface b32_toString {\n\t(b: Uint8Array): string;\n\t(ns: number[]): string;\n\t(n: ReadonlyArray<number>): string;\n\t(z: {length: number; [index: number]: number;}): string;\n}\nconst b32_toString: b32_toString = Reflect.apply.bind(null, String.fromCharCode, null)\n\ninterface call_buf_b32 {\n\t(bv: ArrayBufferView): Uint8Array;\n\t(bv: ArrayBufferView, useString: false): Uint8Array;\n\t(bv: ArrayBufferView, useString: true): string;\n}\nconst buf_b32: call_buf_b32 = (\n\tbv: ArrayBufferView,\n\tuseString = false\n):any => {\n\tconst buf = new Uint8Array(bv.buffer, bv.byteOffset, bv.byteLength),\n\t\tlen = buf.byteLength,\n\t\tcnt = floor(len / 5) * 5,\n\t\trem = len - cnt,\n\t\tbLen = 8 * ceil(len / 5),\n\t\tb32 = useString ? [] : new Uint8Array(bLen)\n\n\tlet i = 0, idx = 0\n\t// 5 bytes are 8 characters\n\twhile (i < cnt) {\n\t\tv[0] = buf[i++]\n\t\tv[1] = buf[i++]\n\t\tv[2] = buf[i++]\n\t\tv[3] = buf[i++]\n\t\tv[4] = buf[i++]\n\n\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\tb32[idx++] = b256[(v[3] << 3 | v[4] >>> 5) & 31]\n\t\tb32[idx++] = b256[v[4] & 31]\n\t}\n\n\tswitch (rem) {\n\t\tcase 1:\n\t\t\tv[0] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 3:\n\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i++]\n\t\t\tv[3] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\t\tb32[idx++] = b256[(v[3] << 3) & 31]\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t}\n\ttry {\n\t\tif (useString) return b32_toString(b32)\n\t\telse return b32\n\t} finally {\n\t\t_v[0] = 0\n\t\t_v[1] = 0\n\t}\n}\nexport {\n\tb32_buf,\n\tbuf_b32,\n\tb32_buf as decode,\n\tbuf_b32 as encode,\n\tb32c,\n\tb256,\n\txb,\n}\n\n"]}
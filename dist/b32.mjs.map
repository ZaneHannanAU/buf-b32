{"version":3,"file":"b32.js","sourceRoot":"","sources":["../src/b32.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @enum b32c {number}\n * maps code points to numbers\n */\nconst b32c: ReadonlyArray<number> = Object.freeze([\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1, -1, 26, 27, 28, 29, 30, 31,\n\t-1, -1, -1, -1, -1, -1, -1, -1,\n\t-1,  0,  1,  2,  3,  4,  5,  6,\n\t7,   8,  9, 10, 11, 12, 13, 14,\n\t15, 16, 17, 18, 19, 20, 21, 22,\n\t23, 24, 25, -1, -1, -1, -1, -1,\n\t-1,  0,  1,  2,  3,  4,  5,  6,\n\t7,   8,  9, 10, 11, 12, 13, 14,\n\t15, 16, 17, 18, 19, 20, 21, 22,\n\t23, 24, 25, -1, -1, -1, -1, -1\n])\n\n// buffered for      0  1    2  3  4    5  6    7\nconst xb:ReadonlyArray<number> = Object.freeze([0, 4, NaN, 3, 2, NaN, 1, NaN])\n\nconst v = new Uint8Array(8)\nconst _v = new Uint32Array(v.buffer, v.byteOffset, 2)\n\ninterface call_b32_buf {\n\t(b32: ArrayBufferView, overwrite?: boolean): Uint8Array;\n\t(b32: string, overwrite?: false): Uint8Array;\n}\nconst getB32S = (s: string, n: number) => s.codePointAt(n) || 0\nconst getB32B = (b: Uint8Array, n: number) => b[n] || 0\nconst {floor, ceil} = Math\nconst b32_buf: call_b32_buf = (\n\tb32: ArrayBufferView | string,\n\toverwrite = false\n): Uint8Array => {\n\tif (overwrite && 'object' !== typeof b32 && !ArrayBuffer.isView(b32))\n\t\tthrow new TypeError(`b32_buf option 'overwrite' cannot be used when b32 is not an ArrayBufferView`)\n\n\tconst B32: Uint8Array | string = (\n\t\t\t'string' === typeof b32\n\t\t\t? b32\n\t\t\t: new Uint8Array(b32.buffer, b32.byteOffset, b32.byteLength)\n\t\t),\n\t\tlen = (\n\t\t\tArrayBuffer.isView(B32)\n\t\t\t? B32.lastIndexOf(0x3D, B32.length - 1) > -1\n\t\t\t: B32.lastIndexOf('=', B32.length - 1) > -1\n\t\t) ? ArrayBuffer.isView(B32)\n\t\t\t? B32.indexOf(0x3D, 0)\n\t\t\t: B32.indexOf('=', 0)\n\t\t: B32.length,\n\t\tcnt = (len & -8) >>> 0,\n\t\trem = len - cnt,\n\t\tbLen = 5 * (len >>> 3) + xb[B32.length - len],\n\t\tbuf = (\n\t\t\toverwrite && 'string' !== typeof b32\n\t\t\t? new Uint8Array(b32.buffer, b32.byteOffset, bLen)\n\t\t\t: new Uint8Array(bLen)\n\t\t),\n\t\tgetB32: ((n: number) => number) = ('string' === typeof B32 ? getB32S : getB32B).bind(null, B32)\n\n\tlet i = 0, idx = 0\n\n\t// 8 chars = 5 bytes\n\twhile (i < cnt) {\n\t\tv[0] = b32c[getB32(i++)]\n\t\tv[1] = b32c[getB32(i++)]\n\t\tv[2] = b32c[getB32(i++)]\n\t\tv[3] = b32c[getB32(i++)]\n\t\tv[4] = b32c[getB32(i++)]\n\t\tv[5] = b32c[getB32(i++)]\n\t\tv[6] = b32c[getB32(i++)]\n\t\tv[7] = b32c[getB32(i++)]\n\n\t\tbuf[idx++] = v[0] << 3 | v[1] >>> 2\n\t\tbuf[idx++] = v[1] << 6 | v[2] << 1 | v[3] >>> 4\n\t\tbuf[idx++] = v[3] << 4 | v[4] >>> 1\n\t\tbuf[idx++] = v[4] << 7 | v[5] << 2 | v[6] >>> 3\n\t\tbuf[idx++] = v[6] << 5 | v[7]\n\t}\n\n\tswitch (rem) {\n\t\tcase 2:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i)]\n\n\t\t\tbuf[idx] = v[0] << 3 | v[1] >>> 2\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = v[0] << 3 | v[1] >>> 2\n\t\t\tbuf[idx] = v[1] << 6 | v[2] << 1 | v[3] >>> 4\n\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = v[0] << 3 | v[1] >>> 2\n\t\t\tbuf[idx++] = v[1] << 6 | v[2] << 1 | v[3] >>> 4\n\t\t\tbuf[idx] = v[3] << 4 | v[4] >>> 1\n\n\t\t\tbreak\n\t\tcase 7:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i++)]\n\t\t\tv[5] = b32c[getB32(i++)]\n\t\t\tv[6] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = v[0] << 3 | v[1] >>> 2\n\t\t\tbuf[idx++] = v[1] << 6 | v[2] << 1 | v[3] >>> 4\n\t\t\tbuf[idx++] = v[3] << 4 | v[4] >>> 1\n\t\t\tbuf[idx] = v[4] << 7 | v[5] << 2 | v[6] >>> 3\n\n\t\t\tbreak\n\t}\n\ttry {\n\t\treturn buf\n\t} finally {\n\t\t_v[0] = 0\n\t\t_v[1] = 0\n\t}\n}\n\n// A..Z; 2..7\nconst b256: ReadonlyArray<number> = Object.freeze([\n\t65, 66, 67, 68, 69, 70, 71, 72,\n\t73, 74, 75, 76, 77, 78, 79, 80,\n\t81, 82, 83, 84, 85, 86, 87, 88,\n\t89, 90, 50, 51, 52, 53, 54, 55\n])\ninterface _toString {\n\t(ns: number[]): string;\n\t(ns: Uint8Array): string;\n}\nconst _toString: _toString = Reflect.apply.bind(null, String.fromCharCode, null)\n\ninterface call_buf_b32 {\n\t(bv: ArrayBufferView): Uint8Array;\n\t(bv: ArrayBufferView, useString: false): Uint8Array;\n\t(bv: ArrayBufferView, useString: true): string;\n}\nconst buf_b32: call_buf_b32 = (bv: ArrayBufferView, useString = false): any => {\n\tconst buf = new Uint8Array(bv.buffer, bv.byteOffset, bv.byteLength),\n\t\tlen = buf.byteLength,\n\t\tcnt = floor(len / 5) * 5,\n\t\trem = len - cnt,\n\t\tbLen = 8 * ceil(len / 5),\n\t\tb32 = useString ? Array(bLen) : new Uint8Array(bLen)\n\t// use an array if we don't want to collect more garbage\n\n\tlet i = 0, idx = 0\n\t// 5 bytes are 8 characters\n\twhile (i < cnt) {\n\t\tv[0] = buf[i++]\n\t\tv[1] = buf[i++]\n\t\tv[2] = buf[i++]\n\t\tv[3] = buf[i++]\n\t\tv[4] = buf[i++]\n\n\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\tb32[idx++] = b256[(v[3] << 3 | v[4] >>> 5) & 31]\n\t\tb32[idx++] = b256[v[4] & 31]\n\t}\n\n\tswitch (rem) {\n\t\tcase 1:\n\t\t\tv[0] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 3:\n\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i++]\n\t\t\tv[3] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\t\tb32[idx++] = b256[(v[3] << 3) & 31]\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t}\n\t_v[0] = 0\n\t_v[1] = 0\n\treturn b32 instanceof Uint8Array\n\t\t? b32\n\t\t: _toString(b32)\n}\nexport {\n\tb32_buf,\n\tbuf_b32,\n\tb32_buf as decode,\n\tbuf_b32 as encode,\n\tb32c,\n\tb256,\n\txb,\n}\n\n"]}
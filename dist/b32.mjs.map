{"version":3,"file":"b32.js","sourceRoot":"","sources":["../src/b32.ts"],"names":[],"mappings":"AAKA,MAAM,IAAI,GAAqC,MAAM,CAAC,MAAM,CAAC;IAE5D,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IAGR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IAGR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;CACT,CAAC,CAAA;AAGF,MAAM,EAAE,GAAyB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;AAE9E,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAM,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;AAOrD,MAAM,OAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AAC/D,MAAM,OAAO,GAAG,CAAC,CAAa,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AACvD,MAAM,OAAO,GAAiB,CAC7B,GAA6B,EAC7B,YAAoB,KAAK,EACb,EAAE;IACd,IAAI,SAAS,IAAI,QAAQ,KAAK,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;QACnE,MAAM,IAAI,SAAS,CAAC,8EAA8E,CAAC,CAAA;IAEpG,MAAM,GAAG,GAAqB,CAC5B,QAAQ,KAAK,OAAO,GAAG;QACvB,CAAC,CAAC,GAAG;QACL,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAC5D,EACD,GAAG,GAAU,CACZ,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;QACvB,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3C,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;QAC1B,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QACtB,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QACtB,CAAC,CAAC,GAAG,CAAC,MAAM,EACZ,GAAG,GAAU,GAAG,GAAG,CAAC,CAAC,EACrB,GAAG,GAAU,GAAG,GAAG,GAAG,EACtB,IAAI,GAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,EACpD,GAAG,GAAc,CAChB,SAAS,IAAI,QAAQ,KAAK,OAAO,GAAG;QACpC,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;QAClD,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CACtB,EACD,MAAM,GAA4B,CAAC,QAAQ,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;IAEhG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAA;IAGlB,OAAO,CAAC,GAAG,GAAG,EAAE;QACf,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC,CAAC,GAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAElC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;QAC3C,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;QACvD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;QAC3C,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;QACvD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;KACrC;IACD,QAAQ,GAAG,EAAE;QACZ,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YAEtB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAEzC,MAAK;QACN,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YAEtB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAC3C,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAErD,MAAK;QACN,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YAEtB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAC3C,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YACvD,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAEzC,MAAK;QACN,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YAEtB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAC3C,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YACvD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAC3C,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;YAErD,MAAK;KACN;IACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACT,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACT,OAAO,GAAG,CAAA;AACX,CAAC,CAAA;AAGD,MAAM,IAAI,GAAyB,MAAM,CAAC,MAAM,CAAC;IAChD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;CAC9B,CAAC,CAAA;AAOF,MAAM,YAAY,GAAiB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAOtF,MAAM,OAAO,GAAiB,CAC7B,EAAmB,EACnB,YAAqB,KAAK,EACrB,EAAE;IACP,MAAM,GAAG,GAAc,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,EAC7E,GAAG,GAAU,GAAG,CAAC,MAAM,EACvB,GAAG,GAAU,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EACpC,GAAG,GAAU,GAAG,GAAG,GAAG,EACtB,IAAI,GAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAC3C,GAAG,GAAc,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;IAEtC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAA;IAElB,OAAO,CAAC,GAAG,GAAG,EAAE;QACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QAEf,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;QAC7B,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;KAC5B;IAED,QAAQ,GAAG,EAAE;QACZ,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;YAEb,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;YAC7B,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACnC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;YAEf,MAAK;QACN,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;YAEb,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;YAC7B,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACnC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;YAEf,MAAK;QACN,KAAK,CAAC;YAEL,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;YAEb,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;YAC7B,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACnC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;YAEf,MAAK;QACN,KAAK,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACf,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;YAEb,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;YAC7B,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACpC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YACnC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;YAEf,MAAK;KACN;IACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACT,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACT,IAAI,SAAS;QAAE,OAAO,YAAY,CAAC,GAAG,CAAC,CAAA;;QAClC,OAAO,GAAG,CAAA;AAChB,CAAC,CAAA;AACD,OAAO,EACN,OAAO,EACP,OAAO,EACP,OAAO,IAAI,MAAM,EACjB,OAAO,IAAI,MAAM,EACjB,IAAI,EACJ,IAAI,EACJ,EAAE,GACF,CAAA","sourcesContent":["\n/**\n * @enum b32c {number}\n * maps code points to numbers\n */\nconst b32c:Readonly<{[key: number]: number}> = Object.freeze({\n\t// 2..7\n\t'50': 26,\n\t'51': 27,\n\t'52': 28,\n\t'53': 29,\n\t'54': 30,\n\t'55': 31,\n\n\t// A..Z\n\t'65': 0,\n\t'66': 1,\n\t'67': 2,\n\t'68': 3,\n\t'69': 4,\n\t'70': 5,\n\t'71': 6,\n\t'72': 7,\n\t'73': 8,\n\t'74': 9,\n\t'75': 10,\n\t'76': 11,\n\t'77': 12,\n\t'78': 13,\n\t'79': 14,\n\t'80': 15,\n\t'81': 16,\n\t'82': 17,\n\t'83': 18,\n\t'84': 19,\n\t'85': 20,\n\t'86': 21,\n\t'87': 22,\n\t'88': 23,\n\t'89': 24,\n\t'90': 25,\n\t\n\t// a..z\n\t'97': 0,\n\t'98': 1,\n\t'99': 2,\n\t'100': 3,\n\t'101': 4,\n\t'102': 5,\n\t'103': 6,\n\t'104': 7,\n\t'105': 8,\n\t'106': 9,\n\t'107': 10,\n\t'108': 11,\n\t'109': 12,\n\t'110': 13,\n\t'111': 14,\n\t'112': 15,\n\t'113': 16,\n\t'114': 17,\n\t'115': 18,\n\t'116': 19,\n\t'117': 20,\n\t'118': 21,\n\t'119': 22,\n\t'120': 23,\n\t'121': 24,\n\t'122': 25\n})\n\n// buffered for      0  1    2  3  4    5  6    7\nconst xb:ReadonlyArray<number> = Object.freeze([0, 4, NaN, 3, 2, NaN, 1, NaN])\n\nconst v = new Uint8Array(8)\nconst _v = new Uint32Array(v.buffer, v.byteOffset, 2)\n\ninterface call_b32_buf {\n\t(b32: ArrayBufferView): Uint8Array;\n\t(b32: string): Uint8Array;\n\t(b32: string, overwrite: false): Uint8Array;\n}\nconst getB32S = (s: string, n: number) => s.codePointAt(n) || 0\nconst getB32B = (b: Uint8Array, n: number) => b[n] || 0\nconst b32_buf: call_b32_buf = (\n\tb32: ArrayBufferView | string,\n\toverwrite:boolean = false\n):Uint8Array => {\n\tif (overwrite && 'object' !== typeof b32 && !ArrayBuffer.isView(b32))\n\t\tthrow new TypeError(`b32_buf option 'overwrite' cannot be used when b32 is not an ArrayBufferView`)\n\n\tconst B32:Uint8Array|string = (\n\t\t\t'string' === typeof b32\n\t\t\t? b32\n\t\t\t: new Uint8Array(b32.buffer, b32.byteOffset, b32.byteLength)\n\t\t),\n\t\tlen:number = (\n\t\t\tArrayBuffer.isView(B32)\n\t\t\t? B32.lastIndexOf(0x3D, B32.length - 1) > -1\n\t\t\t: B32.lastIndexOf('=', B32.length - 1) > -1\n\t\t) ? ArrayBuffer.isView(B32)\n\t\t\t? B32.indexOf(0x3D, 0)\n\t\t\t: B32.indexOf('=', 0)\n\t\t: B32.length,\n\t\tcnt:number = len & -8,\n\t\trem:number = len - cnt,\n\t\tbLen:number = 5 * (len >>> 3) + xb[B32.length - len],\n\t\tbuf:Uint8Array = (\n\t\t\toverwrite && 'string' !== typeof b32\n\t\t\t? new Uint8Array(b32.buffer, b32.byteOffset, bLen)\n\t\t\t: new Uint8Array(bLen)\n\t\t),\n\t\tgetB32: ((n: number) => number) = ('string' === typeof B32 ? getB32S : getB32B).bind(null, B32)\n\n\tlet i = 0, idx = 0\n\n\t// 8 chars = 5 bytes\n\twhile (i < cnt) {\n\t\tv[0] = <number>(b32c[getB32(i++)])\n\t\tv[1] = <number>(b32c[getB32(i++)])\n\t\tv[2] = <number>(b32c[getB32(i++)])\n\t\tv[3] = <number>(b32c[getB32(i++)])\n\t\tv[4] = <number>(b32c[getB32(i++)])\n\t\tv[5] = <number>(b32c[getB32(i++)])\n\t\tv[6] = <number>(b32c[getB32(i++)])\n\t\tv[7] = <number>(b32c[getB32(i++)])\n\n\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\tbuf[idx++] = (v[3] << 4 | v[4] >>> 1) & 255\n\t\tbuf[idx++] = (v[4] << 7 | v[5] << 2 | v[6] >>> 3) & 255\n\t\tbuf[idx++] = (v[6] << 5 | v[7]) & 255\n\t}\n\tswitch (rem) {\n\t\tcase 2:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i)]\n\n\t\t\tbuf[idx] = (v[0] << 3 | v[1] >>> 2) & 255\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\t\tbuf[idx] = (v[3] << 4 | v[4] >>> 1) & 255\n\n\t\t\tbreak\n\t\tcase 7:\n\t\t\tv[0] = b32c[getB32(i++)]\n\t\t\tv[1] = b32c[getB32(i++)]\n\t\t\tv[2] = b32c[getB32(i++)]\n\t\t\tv[3] = b32c[getB32(i++)]\n\t\t\tv[4] = b32c[getB32(i++)]\n\t\t\tv[5] = b32c[getB32(i++)]\n\t\t\tv[6] = b32c[getB32(i)]\n\n\t\t\tbuf[idx++] = (v[0] << 3 | v[1] >>> 2) & 255\n\t\t\tbuf[idx++] = (v[1] << 6 | v[2] << 1 | v[3] >>> 4) & 255\n\t\t\tbuf[idx++] = (v[3] << 4 | v[4] >>> 1) & 255\n\t\t\tbuf[idx] = (v[4] << 7 | v[5] << 2 | v[6] >>> 3) & 255\n\n\t\t\tbreak\n\t}\n\t_v[0] = 0\n\t_v[1] = 0\n\treturn buf\n}\n\n// A..Z; 2..7\nconst b256:ReadonlyArray<number> = Object.freeze([\n\t65, 66, 67, 68, 69, 70, 71, 72,\n\t73, 74, 75, 76, 77, 78, 79, 80,\n\t81, 82, 83, 84, 85, 86, 87, 88,\n\t89, 90, 50, 51, 52, 53, 54, 55\n])\ninterface b32_toString {\n\t(b: Uint8Array): string;\n\t(ns: number[]): string;\n\t(n: ReadonlyArray<number>): string;\n\t(z: {length: number; [index: number]: number;}): string;\n}\nconst b32_toString: b32_toString = Reflect.apply.bind(null, String.fromCharCode, null)\n\ninterface call_buf_b32 {\n\t(bv: ArrayBufferView): Uint8Array;\n\t(bv: ArrayBufferView, useString: false): Uint8Array;\n\t(bv: ArrayBufferView, useString: true): string;\n}\nconst buf_b32: call_buf_b32 = (\n\tbv: ArrayBufferView,\n\tuseString: boolean = false\n):any => {\n\tconst buf:Uint8Array = new Uint8Array(bv.buffer, bv.byteOffset, bv.byteLength),\n\t\tlen:number = buf.length,\n\t\tcnt:number = Math.floor(len / 5) * 5,\n\t\trem:number = len - cnt,\n\t\tbLen:number = 8 * Math.ceil(buf.length / 5),\n\t\tb32:Uint8Array = new Uint8Array(bLen)\n\n\tlet i = 0, idx = 0\n\t// 5 bytes are 8 characters\n\twhile (i < cnt) {\n\t\tv[0] = buf[i++]\n\t\tv[1] = buf[i++]\n\t\tv[2] = buf[i++]\n\t\tv[3] = buf[i++]\n\t\tv[4] = buf[i++]\n\n\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\tb32[idx++] = b256[(v[3] << 3 | v[4] >>> 5) & 31]\n\t\tb32[idx++] = b256[v[4] & 31]\n\t}\n\n\tswitch (rem) {\n\t\tcase 1:\n\t\t\tv[0] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 3:\n\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1) & 31]\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx++] = 0x3D\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tv[0] = buf[i++]\n\t\t\tv[1] = buf[i++]\n\t\t\tv[2] = buf[i++]\n\t\t\tv[3] = buf[i]\n\n\t\t\tb32[idx++] = b256[v[0] >>> 3]\n\t\t\tb32[idx++] = b256[(v[0] << 2 | v[1] >>> 6) & 31]\n\t\t\tb32[idx++] = b256[(v[1] >>> 1) & 31]\n\t\t\tb32[idx++] = b256[(v[1] << 4 | v[2] >>> 4) & 31]\n\t\t\tb32[idx++] = b256[(v[2] << 1 | v[3] >>> 7) & 31]\n\t\t\tb32[idx++] = b256[(v[3] >>> 2) & 31]\n\t\t\tb32[idx++] = b256[(v[3] << 3) & 31]\n\t\t\tb32[idx] = 0x3D\n\n\t\t\tbreak\n\t}\n\t_v[0] = 0\n\t_v[1] = 0\n\tif (useString) return b32_toString(b32)\n\telse return b32\n}\nexport {\n\tb32_buf,\n\tbuf_b32,\n\tb32_buf as decode,\n\tbuf_b32 as encode,\n\tb32c,\n\tb256,\n\txb,\n}\n\n"]}